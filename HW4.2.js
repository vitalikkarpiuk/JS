// Задаємо змінну, яка містить рядок "number" і додаємо до нього 3, а потім ще раз додаємо 3. Результатом буде рядок "number33".
'number' + 3 + 3; // "number33"

// null конвертується у число 0, а потім додається до числа 3. Результатом буде число 3.
null + 3; // 3

// Оператор && повертає перше логічне значення false, оскільки 5 не є false. Результатом буде false.
5 && "qwerty"; // "qwerty"

// Оператор + конвертує рядки у числа, тому "40" стає 40, а "2" стає 2. Потім вони додаються разом, а рядок "hillel" приєднується. Результатом буде рядок "42hillel".
+'40' + +'2' + "hillel"; // "42hillel"

// Перше вираз "10" - 5 конвертує "10" у число 10, і від числа 5 віднімається 5, результатом є число 5. Потім порівнюється число 5 з числом 6, результатом буде false.
'10' - 5 === 6; // false

// Логічні значення true та false конвертуються у числа 1 і 0 відповідно, тому результатом буде 1.
true + false; // 1

// Рядок "4px" не може бути конвертований у число, тому результатом буде NaN (Not a Number).
'4px' - 3; // NaN

// Рядок "4" конвертується у число 4, і з нього віднімається число 3. Результатом буде число 1.
'4' - 3; // 1

// Оператор ** підносить число 3 до степеня 0, результатом буде число 1, і потім воно конвертується у рядок. Результатом буде рядок "61".
'6' + 3 ** 0; // "61"

// Рядок "6" конвертується у число 6, і з нього ділиться число 12. Результатом буде число 2.
12 / '6'; // 2

// Оператор + конвертує рядок "10" у число 10, і тоді порівнюється з результатом порівняння числа 5 і 6, яке буде false. Результатом буде рядок "false".
'10' + (5 === 6); // "false"

// null конвертується у число 0, а 9 / 3 рівне 3. Результатом буде число 3, піднесене до степеня 3, тобто 27.
3 ** (9 / 3); // 27

// Рядок "false" не є пустим, тому обидва оператори !! конвертуються у true. Результатом буде true == true, тобто true.
!!'false' == !!'true'; // true

// Оператор || повертає перше true, або останнє значення, тому результатом буде "0", оскільки це перше true. Оператор && повертає останнє значення, якщо воно true, тому результатом буде "0".
0 || '0' && 1; // "0"

// Результатом порівняння null і false буде false, але воно порівнюється з числом 1, тому результатом буде true.
(+null == false) < 1; // true

// Оператор && повертає false, бо перший операнд false, і немає потреби перевіряти другий. Результатом
